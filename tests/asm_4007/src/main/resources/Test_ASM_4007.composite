<?xml version="1.0" encoding="UTF-8"?>
<!--
 *
 * Copyright(C) OASIS(R) 2009, 2010. All Rights Reserved.
 * OASIS trademark, IPR and other policies apply.    
 *   
-->
<!--
Tests that a <property/> element of a <componentType/> does not have both 
@element and @type attributes set at the same time
-->
<composite xmlns="http://docs.oasis-open.org/ns/opencsa/sca/200912"
           targetNamespace="http://docs.oasis-open.org/ns/opencsa/scatests/200903"
           xmlns:test="http://docs.oasis-open.org/ns/opencsa/scatests/200903"
           xmlns:sca="http://docs.oasis-open.org/ns/opencsa/sca/200912"
           name="TEST_ASM_4007">
           
    <component name="TestClient">
		<implementation.composite name="test:TestClient_0002"/>
		<service name="TestInvocation">
			<interface.wsdl interface="http://test.sca.oasisopen.org/#wsdl.porttype(TestInvocation)"/>
            <binding.ws/>
		</service>
        <reference name="reference1" target="TestComponent1/Service1" />
        <property name="testName">ASM_4007</property>
    </component>
    
    <!-- Component which uses a composite which has a <property/> element
         with a complex type defined incorrectly both in terms of a global element 
         (sca:callback)and in terms of an XSD type (sca:Callback) -->
    <component name="TestComponent1">
		<implementation.composite name="test:TestComposite45"/>
        <property name="serviceName">service1</property>
        <property name="propertyName" element="sca:callback">
           <value requires="foo" policySets="bar">
              <binding.sca/>
           </value>
        </property>
        <reference name="Reference1" target="TestComponent2/Service1">
        	<interface.wsdl interface="http://test.sca.oasisopen.org/#wsdl.porttype(Service1)"/>
        </reference>
    </component> 

    <component name="TestComponent2">
    	<implementation.composite name="test:TestComposite1"/>
    	<service name="Service1">
    		<interface.wsdl interface="http://test.sca.oasisopen.org/#wsdl.porttype(Service1)"/>
    	</service>
    	<property name="serviceName">service2</property>
    </component>

</composite>
